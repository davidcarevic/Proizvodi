// <auto-generated />
using System;
using EFDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFDataAccess.Migrations
{
    [DbContext(typeof(ProizvodiContext))]
    partial class ProizvodiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Domain.Dobavljac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dobavljacs");
                });

            modelBuilder.Entity("Domain.Kategorija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategorijas");
                });

            modelBuilder.Entity("Domain.Proizvod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("DobId")
                        .HasColumnType("int");

                    b.Property<int?>("DobavljacId")
                        .HasColumnType("int");

                    b.Property<int>("KatId")
                        .HasColumnType("int");

                    b.Property<int?>("KategorijaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ProId")
                        .HasColumnType("int");

                    b.Property<int?>("ProizvodjacId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DobavljacId");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("ProizvodjacId");

                    b.ToTable("Proizvods");
                });

            modelBuilder.Entity("Domain.Proizvodjac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Proizvodjacs");
                });

            modelBuilder.Entity("Domain.Proizvod", b =>
                {
                    b.HasOne("Domain.Dobavljac", "Dobavljac")
                        .WithMany("Proizvods")
                        .HasForeignKey("DobavljacId");

                    b.HasOne("Domain.Kategorija", "Kategorija")
                        .WithMany("Proizvods")
                        .HasForeignKey("KategorijaId");

                    b.HasOne("Domain.Proizvodjac", "Proizvodjac")
                        .WithMany("Proizvods")
                        .HasForeignKey("ProizvodjacId");

                    b.Navigation("Dobavljac");

                    b.Navigation("Kategorija");

                    b.Navigation("Proizvodjac");
                });

            modelBuilder.Entity("Domain.Dobavljac", b =>
                {
                    b.Navigation("Proizvods");
                });

            modelBuilder.Entity("Domain.Kategorija", b =>
                {
                    b.Navigation("Proizvods");
                });

            modelBuilder.Entity("Domain.Proizvodjac", b =>
                {
                    b.Navigation("Proizvods");
                });
#pragma warning restore 612, 618
        }
    }
}
